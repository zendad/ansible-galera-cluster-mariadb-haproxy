---
# tasks file secure
# Update and set mysql data password.
- name: Update mariadb root password for localhost root account.
  mysql_user:
    name: "root"
    login_unix_socket: "{{ mariadb_socket }}"
    password: "{{ mariadb_root_password }}"
    check_implicit_admin: true

# Has to be after the root password assignment, for idempotency.
- name: Copy .my.cnf file with root password credentials.
  template:
    src: "user-my.cnf.j2"
    dest: "~/.my.cnf"
    owner: root
    group: root
    mode: 0600

# secure mariadb
- name: Removes all anonymous user accounts
  mysql_user:
    name: ''
    login_unix_socket: "{{ mariadb_socket }}"
    host_all: yes
    state: absent

- name: Disallow root login remotely
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: False

- name: Remove mariadb test database.
  mysql_db:
    name: "test"
    login_unix_socket: "{{ mariadb_socket }}"
    state: absent

# Install default databases
- name: Ensure Mariadb default databases are present.
  mysql_db:
    name: "{{ item.name }}"
    login_unix_socket: "{{ mariadb_socket }}"
    collation: "{{ item.collation | default('utf8_general_ci') }}"
    encoding: "{{ item.encoding | default('utf8') }}"
  with_items: "{{ mariadb_databases }}"
  run_once: True

# Create default users for DB
- name: Ensure MariaDB users are present.
  mysql_user:
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    login_unix_socket: "{{ mariadb_socket }}"
    priv: "{{ item.priv }}"
    state: present
  with_items: 
    - "{{ mariadb_users }}"
  run_once: True

# Allow login remotely for new users
- name: Allow login remotely for new users
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - UPDATE mysql.user SET host='%' WHERE user NOT IN ('root','mysql')
 
# fix users not able to login
- name: Copy users.sql.j2 to fix users not able to login.
  template:
    src: "users.sql.j2"
    dest: "{{ mariadb_sql_file }}"
    owner: root
    group: root
    mode: 0600

- name: Generate sql file for users
  shell: mysql < {{ mariadb_sql_file }} > {{ mariadb_sql_file_output }} &&  sed -i 1,2d {{ mariadb_sql_file_output }} && echo "FLUSH PRIVILEGES;" >> {{ mariadb_sql_file_output }} && sed -i '1iFLUSH PRIVILEGES;' {{ mariadb_sql_file_output }}

- name: Execute sql file for users
  shell: sed -i 's/\\n//' {{ mariadb_sql_file_output }} && mysql <  {{ mariadb_sql_file_output }}
  warn: False

# reset user privileges
- name: Reload privilege tables
  command: 'mysql -ne "{{ item }}"'
  with_items:
    - FLUSH PRIVILEGES
  changed_when: False

# Cleanup
- name: Clean up, remove files not needed anymore
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "~/.my.cnf"
    - "{{ mariadb_sql_file_output }}"
    - " {{ mariadb_sql_file }}"